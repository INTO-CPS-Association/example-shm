import numpy

def area(E, nu, r, s, x1, x2, x3, x4, x5, x6, y1, y2, y3, y4, y5, y6):
    return 0.5*numpy.abs((-4.0*r*x4 + 4.0*r*x5 + x1*(4.0*r + 4.0*s - 3.0) + x3*(4.0*s - 1.0) - x6*(4.0*r + 8.0*s - 4.0))*(4.0*s*y5 - 4.0*s*y6 + y1*(4.0*r + 4.0*s - 3.0) + y2*(4.0*r - 1.0) - y4*(8.0*r + 4.0*s - 4.0)) - (-4.0*r*y4 + 4.0*r*y5 + y1*(4.0*r + 4.0*s - 3.0) + y3*(4.0*s - 1.0) - y6*(4.0*r + 8.0*s - 4.0))*(4.0*s*x5 - 4.0*s*x6 + x1*(4.0*r + 4.0*s - 3.0) + x2*(4.0*r - 1.0) - x4*(8.0*r + 4.0*s - 4.0)))

def jac(E, nu, r, s, x1, x2, x3, x4, x5, x6, y1, y2, y3, y4, y5, y6):
    return numpy.array([[4.0*s*x5 - 4.0*s*x6 + x1*(4.0*r + 4.0*s - 3.0) + x2*(4.0*r - 1.0) + x4*(-8.0*r - 4.0*s + 4.0), 4.0*s*y5 - 4.0*s*y6 + y1*(4.0*r + 4.0*s - 3.0) + y2*(4.0*r - 1.0) + y4*(-8.0*r - 4.0*s + 4.0)], [-4.0*r*x4 + 4.0*r*x5 + x1*(4.0*r + 4.0*s - 3.0) + x3*(4.0*s - 1.0) + x6*(-4.0*r - 8.0*s + 4.0), -4.0*r*y4 + 4.0*r*y5 + y1*(4.0*r + 4.0*s - 3.0) + y3*(4.0*s - 1.0) + y6*(-4.0*r - 8.0*s + 4.0)]])

def phi(E, nu, r, s, x1, x2, x3, x4, x5, x6, y1, y2, y3, y4, y5, y6):
    return numpy.array([[2.0*r**2 + 4.0*r*s - 3.0*r + 2.0*s**2 - 3.0*s + 1.0], [r*(2.0*r - 1.0)], [s*(2.0*s - 1.0)], [4.0*r*(-r - s + 1)], [4.0*r*s], [4.0*s*(-r - s + 1)]])

def N(E, nu, r, s, x1, x2, x3, x4, x5, x6, y1, y2, y3, y4, y5, y6):
    return numpy.array([[2.0*r**2 + 4.0*r*s - 3.0*r + 2.0*s**2 - 3.0*s + 1.0, 0, 0, 0, 0, r*(2.0*r - 1.0), 0, 0, 0, 0, s*(2.0*s - 1.0), 0, 0, 0, 0, 4.0*r*(-r - s + 1), 0, 0, 0, 0, 4.0*r*s, 0, 0, 0, 0, 4.0*s*(-r - s + 1), 0, 0, 0, 0], [0, 2.0*r**2 + 4.0*r*s - 3.0*r + 2.0*s**2 - 3.0*s + 1.0, 0, 0, 0, 0, r*(2.0*r - 1.0), 0, 0, 0, 0, s*(2.0*s - 1.0), 0, 0, 0, 0, 4.0*r*(-r - s + 1), 0, 0, 0, 0, 4.0*r*s, 0, 0, 0, 0, 4.0*s*(-r - s + 1), 0, 0, 0], [0, 0, 2.0*r**2 + 4.0*r*s - 3.0*r + 2.0*s**2 - 3.0*s + 1.0, 0, 0, 0, 0, r*(2.0*r - 1.0), 0, 0, 0, 0, s*(2.0*s - 1.0), 0, 0, 0, 0, 4.0*r*(-r - s + 1), 0, 0, 0, 0, 4.0*r*s, 0, 0, 0, 0, 4.0*s*(-r - s + 1), 0, 0], [0, 0, 0, 2.0*r**2 + 4.0*r*s - 3.0*r + 2.0*s**2 - 3.0*s + 1.0, 0, 0, 0, 0, r*(2.0*r - 1.0), 0, 0, 0, 0, s*(2.0*s - 1.0), 0, 0, 0, 0, 4.0*r*(-r - s + 1), 0, 0, 0, 0, 4.0*r*s, 0, 0, 0, 0, 4.0*s*(-r - s + 1), 0], [0, 0, 0, 0, 2.0*r**2 + 4.0*r*s - 3.0*r + 2.0*s**2 - 3.0*s + 1.0, 0, 0, 0, 0, r*(2.0*r - 1.0), 0, 0, 0, 0, s*(2.0*s - 1.0), 0, 0, 0, 0, 4.0*r*(-r - s + 1), 0, 0, 0, 0, 4.0*r*s, 0, 0, 0, 0, 4.0*s*(-r - s + 1)]])

def D(E, nu, r, s, x1, x2, x3, x4, x5, x6, y1, y2, y3, y4, y5, y6):
    return numpy.array([[-E/(nu**2 - 1), -E*nu/(nu**2 - 1), 0, 0, 0], [-E*nu/(nu**2 - 1), -E/(nu**2 - 1), 0, 0, 0], [0, 0, E/(2*nu + 2), 0, 0], [0, 0, 0, E/(2*nu + 2), 0], [0, 0, 0, 0, E/(2*nu + 2)]])

def B(jac_inv11, jac_inv12, jac_inv21, jac_inv22, r, s, t):
    return numpy.array([[jac_inv11*(4.0*r + 4.0*s - 3.0) + jac_inv12*(4.0*r + 4.0*s - 3.0), 0, 0, 0, 0, jac_inv11*(4.0*r - 1.0), 0, 0, 0, 0, jac_inv12*(4.0*s - 1.0), 0, 0, 0, 0, jac_inv11*(-8.0*r - 4.0*s + 4.0) - 4.0*jac_inv12*r, 0, 0, 0, 0, 4.0*jac_inv11*s + 4.0*jac_inv12*r, 0, 0, 0, 0, -4.0*jac_inv11*s + jac_inv12*(-4.0*r - 8.0*s + 4.0), 0, 0, 0, 0], [0, jac_inv21*(4.0*r + 4.0*s - 3.0) + jac_inv22*(4.0*r + 4.0*s - 3.0), 0, 0, 0, 0, jac_inv21*(4.0*r - 1.0), 0, 0, 0, 0, jac_inv22*(4.0*s - 1.0), 0, 0, 0, 0, jac_inv21*(-8.0*r - 4.0*s + 4.0) - 4.0*jac_inv22*r, 0, 0, 0, 0, 4.0*jac_inv21*s + 4.0*jac_inv22*r, 0, 0, 0, 0, -4.0*jac_inv21*s + jac_inv22*(-4.0*r - 8.0*s + 4.0), 0, 0, 0], [0, 0, t*(jac_inv21*(4.0*r + 4.0*s - 3.0) + jac_inv22*(4.0*r + 4.0*s - 3.0)), 0, -2.0*r**2 - 4.0*r*s + 3.0*r - 2.0*s**2 + 3.0*s - 1.0, 0, 0, jac_inv21*t*(4.0*r - 1.0), 0, -2.0*r**2 - 4.0*r*s + 3.0*r - 2.0*s**2 + 3.0*s - 1.0, 0, 0, jac_inv22*t*(4.0*s - 1.0), 0, -2.0*r**2 - 4.0*r*s + 3.0*r - 2.0*s**2 + 3.0*s - 1.0, 0, 0, t*(jac_inv21*(-8.0*r - 4.0*s + 4.0) - 4.0*jac_inv22*r), 0, -2.0*r**2 - 4.0*r*s + 3.0*r - 2.0*s**2 + 3.0*s - 1.0, 0, 0, t*(4.0*jac_inv21*s + 4.0*jac_inv22*r), 0, -2.0*r**2 - 4.0*r*s + 3.0*r - 2.0*s**2 + 3.0*s - 1.0, 0, 0, t*(-4.0*jac_inv21*s + jac_inv22*(-4.0*r - 8.0*s + 4.0)), 0, -2.0*r**2 - 4.0*r*s + 3.0*r - 2.0*s**2 + 3.0*s - 1.0], [0, 0, t*(jac_inv11*(4.0*r + 4.0*s - 3.0) + jac_inv12*(4.0*r + 4.0*s - 3.0)), -2.0*r**2 - 4.0*r*s + 3.0*r - 2.0*s**2 + 3.0*s - 1.0, 0, 0, 0, jac_inv11*t*(4.0*r - 1.0), 0, 0, 0, 0, jac_inv12*t*(4.0*s - 1.0), 0, 0, 0, 0, t*(jac_inv11*(-8.0*r - 4.0*s + 4.0) - 4.0*jac_inv12*r), 0, 0, 0, 0, t*(4.0*jac_inv11*s + 4.0*jac_inv12*r), 0, 0, 0, 0, t*(-4.0*jac_inv11*s + jac_inv12*(-4.0*r - 8.0*s + 4.0)), -r*(2.0*r - 1.0), 0], [jac_inv11*(4.0*r + 4.0*s - 3.0) + jac_inv12*(4.0*r + 4.0*s - 3.0), jac_inv21*(4.0*r + 4.0*s - 3.0) + jac_inv22*(4.0*r + 4.0*s - 3.0), 0, 0, 2.0*r**2 + 4.0*r*s - 3.0*r + 2.0*s**2 - 3.0*s + 1.0, jac_inv11*(4.0*r - 1.0), jac_inv21*(4.0*r - 1.0), 0, 0, 0, jac_inv12*(4.0*s - 1.0), jac_inv22*(4.0*s - 1.0), 0, 0, 0, jac_inv11*(-8.0*r - 4.0*s + 4.0) - 4.0*jac_inv12*r, jac_inv21*(-8.0*r - 4.0*s + 4.0) - 4.0*jac_inv22*r, 0, 0, 0, 4.0*jac_inv11*s + 4.0*jac_inv12*r, 4.0*jac_inv21*s + 4.0*jac_inv22*r, 0, 0, 0, -4.0*jac_inv11*s + jac_inv12*(-4.0*r - 8.0*s + 4.0), -4.0*jac_inv21*s + jac_inv22*(-4.0*r - 8.0*s + 4.0), 0, 0, r*(2.0*r - 1.0)]])

